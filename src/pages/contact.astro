---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

const contactInfo = [
  {
    titleKey: "phone",
    title: "Phone",
    icon: "üìû",
    details: ["+1 (555) 123-4567", "+1 (555) 123-4568"],
    descKey: "phoneDesc",
    description: "Available 24/7 for reservations and assistance"
  },
  {
    titleKey: "email",
    title: "Email",
    icon: "üìß",
    details: ["info@apartments-delfin.net", "reservations@apartments-delfin.net"],
    descKey: "emailDesc",
    description: "We respond to all emails within 2 hours"
  },
  {
    titleKey: "address",
    title: "Address",
    icon: "üìç",
    details: ["123 Ocean View Drive", "Coastal City, CA 90210"],
    descKey: "addressDesc",
    description: "Prime beachfront location with easy access"
  },
  {
    titleKey: "hours",
    title: "Hours",
    icon: "üïí",
    details: ["Reception: 24/7", "Concierge: 8 AM - 10 PM"],
    descKey: "hoursDesc",
    description: "Our team is here to assist you anytime"
  }
];

const faqs = [
  {
    questionKey: "faqCancellationQ",
    question: "What is your cancellation policy?",
    answerKey: "faqCancellationA",
    answer: "We offer flexible cancellation up to 48 hours before check-in for a full refund. Cancellations within 48 hours are subject to a one-night charge."
  },
  {
    questionKey: "faqPetsQ",
    question: "Do you allow pets?",
    answerKey: "faqPetsA",
    answer: "Yes, we are pet-friendly! We welcome well-behaved pets with a small additional fee. Please inform us during booking about your furry companions."
  },
  {
    questionKey: "faqParkingQ",
    question: "Is parking available?",
    answerKey: "faqParkingA",
    answer: "Yes, we provide complimentary covered parking for all guests. No reservation required - parking is included with your stay."
  },
  {
    questionKey: "faqAmenitiesQ",
    question: "What amenities are included?",
    answerKey: "faqAmenitiesA",
    answer: "All apartments include free WiFi, full kitchen, ocean views, balcony access, and use of our pool, fitness center, and concierge services."
  },
  {
    questionKey: "faqBeachQ",
    question: "How far is the beach?",
    answerKey: "faqBeachA",
    answer: "Our apartments are just a 2-minute walk from the pristine sandy beach. You can see the ocean from your balcony!"
  },
  {
    questionKey: "faqTransferQ",
    question: "Do you offer airport transfers?",
    answerKey: "faqTransferA",
    answer: "Yes, we provide complimentary airport shuttle service. Please arrange this at least 24 hours in advance through our concierge."
  }
];
---

<Layout 
  title="Contact Us - Apartments Delfin" 
  description="Get in touch with Apartments Delfin for reservations, inquiries, or assistance. Available 24/7 with multiple ways to reach our friendly team."
  keywords="contact, reservations, customer service, phone, email, address, Delfin apartments"
>
  <Header />
  
  <main class="pt-16">
    <!-- Hero Section -->
    <section class="relative bg-gradient-to-r from-primary-600 to-primary-800 text-white py-20">
      <div class="absolute inset-0 bg-black/20"></div>
      <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center">
          <h1 class="text-4xl sm:text-5xl font-bold mb-6" data-key="contactUs">Contact Us</h1>
          <p class="text-xl text-primary-100 max-w-3xl mx-auto" data-key="contactUsSubtitle">
            We're here to help make your stay perfect. Reach out to us anytime for reservations, questions, or assistance.
          </p>
        </div>
      </div>
    </section>

    <!-- Contact Information -->
    <section class="py-20">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-16">
          {contactInfo.map((info, index) => (
            <div 
              class="bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 text-center animate-scale-in"
              style={`animation-delay: ${index * 0.1}s`}
            >
              <div class="text-4xl mb-4">{info.icon}</div>
              <h3 class="text-xl font-semibold text-gray-900 mb-3" data-key={info.titleKey}>{info.title}</h3>
              <div class="space-y-1 mb-3">
                {info.details.map(detail => (
                  <div class="text-gray-700 font-medium">{detail}</div>
                ))}
              </div>
              <p class="text-sm text-gray-600" data-key={info.descKey}>{info.description}</p>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Contact Form & Map -->
    <section class="py-20 bg-gray-50">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
          <!-- Contact Form -->
          <div class="bg-white rounded-xl shadow-lg p-8">
            <h2 class="text-2xl font-bold text-gray-900 mb-6" data-key="sendMessage">Send us a Message</h2>
            <form class="space-y-6">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label for="firstName" class="block text-sm font-medium text-gray-700 mb-2">
                    <span data-key="firstName">First Name</span> *
                  </label>
                  <input
                    type="text"
                    id="firstName"
                    name="firstName"
                    required
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
                    placeholder="John"
                  />
                </div>
                <div>
                  <label for="lastName" class="block text-sm font-medium text-gray-700 mb-2">
                    <span data-key="lastName">Last Name</span> *
                  </label>
                  <input
                    type="text"
                    id="lastName"
                    name="lastName"
                    required
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
                    placeholder="Doe"
                  />
                </div>
              </div>
              
              <div>
                <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
                  <span data-key="emailAddress">Email Address</span> *
                </label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  required
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
                  placeholder="john@example.com"
                />
              </div>
              
              <div>
                <label for="phone" class="block text-sm font-medium text-gray-700 mb-2">
                  <span data-key="phoneNumber">Phone Number</span>
                </label>
                <input
                  type="tel"
                  id="phone"
                  name="phone"
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
                  placeholder="+1 (555) 123-4567"
                />
              </div>
              
              <div>
                <label for="subject" class="block text-sm font-medium text-gray-700 mb-2">
                  <span data-key="subject">Subject</span> *
                </label>
                <select
                  id="subject"
                  name="subject"
                  required
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
                >
                  <option value="" data-key="selectSubject">Select a subject</option>
                  <option value="reservation" data-key="newReservation">New Reservation</option>
                  <option value="existing" data-key="existingReservation">Existing Reservation</option>
                  <option value="general" data-key="generalInquiry">General Inquiry</option>
                  <option value="amenities" data-key="amenitiesServices">Amenities & Services</option>
                  <option value="feedback" data-key="feedback">Feedback</option>
                  <option value="other" data-key="other">Other</option>
                </select>
              </div>
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label for="checkin" class="block text-sm font-medium text-gray-700 mb-2" data-key="checkinDate">Check-in Date</label>
                  <input
                    type="date"
                    id="checkin"
                    name="checkin"
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
                  />
                </div>
                <div>
                  <label for="checkout" class="block text-sm font-medium text-gray-700 mb-2" data-key="checkoutDate">Check-out Date</label>
                  <input
                    type="date"
                    id="checkout"
                    name="checkout"
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
                  />
                </div>
              </div>
              
              <div>
                <label for="guests" class="block text-sm font-medium text-gray-700 mb-2" data-key="numberOfGuests">Number of Guests</label>
                <select
                  id="guests"
                  name="guests"
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
                >
                  <option value="" data-key="selectGuests">Select number of guests</option>
                  <option value="1">1 Guest</option>
                  <option value="2">2 Guests</option>
                  <option value="3">3 Guests</option>
                  <option value="4">4 Guests</option>
                  <option value="5">5 Guests</option>
                </select>
              </div>
              
              <div>
                <label for="message" class="block text-sm font-medium text-gray-700 mb-2">
                  <span data-key="message">Message</span> *
                </label>
                <textarea
                  id="message"
                  name="message"
                  rows="5"
                  required
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors resize-vertical"
                  data-key="messagePlaceholder"
                  placeholder="Please tell us how we can help you..."
                ></textarea>
              </div>
              
              <div class="flex items-start">
                <input
                  type="checkbox"
                  id="newsletter"
                  name="newsletter"
                  class="mt-1 h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"
                />
                <label for="newsletter" class="ml-3 text-sm text-gray-600" data-key="newsletter">
                  I would like to receive updates and special offers via email
                </label>
              </div>
              
              <button
                type="submit"
                class="w-full bg-primary-600 hover:bg-primary-700 text-white py-4 px-6 rounded-lg font-semibold transition-all duration-200 transform hover:scale-105 shadow-lg hover:shadow-xl"
                data-key="sendMessageBtn"
              >
                Send Message
              </button>
            </form>
          </div>
          
          <!-- Map & Additional Info -->
          <div class="space-y-8">
            <!-- Map -->
            <div class="bg-white rounded-xl shadow-lg overflow-hidden">
              <div class="h-64 bg-gradient-to-br from-blue-100 to-blue-200 flex items-center justify-center relative">
                <div class="text-center">
                  <svg class="w-12 h-12 text-blue-500 mx-auto mb-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                  </svg>
                  <h3 class="text-lg font-semibold text-gray-700" data-key="findUsHere">Find Us Here</h3>
                  <p class="text-gray-600 text-sm">123 Ocean View Drive</p>
                </div>
                
                <!-- Map marker -->
                <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2">
                  <div class="w-3 h-3 bg-red-500 rounded-full animate-pulse"></div>
                </div>
              </div>
              
              <div class="p-6">
                <h3 class="text-lg font-semibold text-gray-900 mb-3" data-key="visitLocation">Visit Our Location</h3>
                <p class="text-gray-600 mb-4" data-key="visitLocationDesc">
                  Located directly on the beachfront with stunning ocean views and easy access to local attractions.
                </p>
                <a
                  href="https://maps.google.com"
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center text-primary-600 hover:text-primary-700 font-medium"
                  data-key="getDirections"
                >
                  Get Directions
                  <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                  </svg>
                </a>
              </div>
            </div>
            
            <!-- Emergency Contact -->
            <div class="bg-accent-50 rounded-xl p-6">
              <h3 class="text-lg font-semibold text-gray-900 mb-3" data-key="emergencyContact">Emergency Contact</h3>
              <p class="text-gray-600 mb-4" data-key="emergencyContactDesc">
                For urgent matters outside business hours, please use our 24/7 emergency line.
              </p>
              <div class="flex items-center text-accent-600 font-semibold">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                </svg>
                +1 (555) 911-HELP
              </div>
            </div>
            
            <!-- Response Time -->
            <div class="bg-primary-50 rounded-xl p-6">
              <h3 class="text-lg font-semibold text-gray-900 mb-3" data-key="responseTimes">Response Times</h3>
              <div class="space-y-2 text-sm">
                <div class="flex justify-between">
                  <span class="text-gray-600" data-key="emailInquiries">Email inquiries:</span>
                  <span class="font-medium text-gray-900" data-key="within2Hours">Within 2 hours</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-gray-600" data-key="phoneCalls">Phone calls:</span>
                  <span class="font-medium text-gray-900" data-key="immediate">Immediate</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-gray-600" data-key="reservationRequests">Reservation requests:</span>
                  <span class="font-medium text-gray-900" data-key="within1Hour">Within 1 hour</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- FAQ Section -->
    <section class="py-20">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-16">
          <h2 class="text-3xl font-bold text-gray-900 mb-4" data-key="faqTitle">Frequently Asked Questions</h2>
          <p class="text-xl text-gray-600" data-key="faqSubtitle">
            Find quick answers to common questions about our apartments and services.
          </p>
        </div>
        
        <div class="space-y-6">
          {faqs.map((faq, index) => (
            <div 
              class="bg-white rounded-xl shadow-lg overflow-hidden animate-scale-in"
              style={`animation-delay: ${index * 0.1}s`}
            >
              <button 
                class="faq-button w-full px-6 py-4 text-left flex items-center justify-between hover:bg-gray-50 transition-colors"
                onclick="toggleFAQ(this)"
              >
                <h3 class="text-lg font-semibold text-gray-900" data-key={faq.questionKey}>{faq.question}</h3>
                <svg class="w-5 h-5 text-gray-500 transform transition-transform faq-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              </button>
              <div class="faq-answer px-6 pb-4 hidden">
                <p class="text-gray-600 leading-relaxed" data-key={faq.answerKey}>{faq.answer}</p>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section class="py-20 bg-primary-600 text-white">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h2 class="text-3xl sm:text-4xl font-bold mb-6" data-key="readyToBook">Ready to Book Your Stay?</h2>
        <p class="text-xl text-primary-100 mb-8 max-w-3xl mx-auto" data-key="readyToBookSubtitle">
          Don't wait - secure your perfect oceanfront apartment today and start planning your dream vacation.
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a
            href="/apartments"
            class="bg-white text-primary-600 hover:bg-gray-100 px-8 py-4 rounded-lg text-lg font-semibold transition-all duration-200 transform hover:scale-105"
            data-key="viewApartments"
          >
            View Apartments
          </a>
          <a
            href="tel:+15551234567"
            class="bg-accent-500 hover:bg-accent-600 text-white px-8 py-4 rounded-lg text-lg font-semibold transition-all duration-200 transform hover:scale-105"
            data-key="callNow"
          >
            Call Now
          </a>
        </div>
      </div>
    </section>
  </main>
  
  <Footer />
</Layout>

<script>
  import { t } from '../lib/i18n';

  function toggleFAQ(button) {
    const answer = button.nextElementSibling;
    const icon = button.querySelector('.faq-icon');
    
    if (answer.classList.contains('hidden')) {
      answer.classList.remove('hidden');
      icon.style.transform = 'rotate(180deg)';
    } else {
      answer.classList.add('hidden');
      icon.style.transform = 'rotate(0deg)';
    }
  }

  class ContactPage {
    constructor() {
      this.updateTranslations();
      this.bindEvents();
    }

    updateTranslations() {
      const elements = document.querySelectorAll('[data-key]');
      elements.forEach(element => {
        const key = element.getAttribute('data-key');
        if (key) {
          if (element.tagName === 'INPUT' && element.type !== 'submit' && element.type !== 'button') {
            element.placeholder = t(key);
          } else if (element.tagName === 'TEXTAREA') {
            element.placeholder = t(key);
          } else if (element.tagName === 'OPTION') {
            element.textContent = t(key);
          } else {
            element.textContent = t(key);
          }
        }
      });

      // Listen for language changes
      window.addEventListener('languageChanged', () => {
        this.updateTranslations();
      });
    }

    bindEvents() {
      // Form submission handler
      const form = document.querySelector('form');
      if (form) {
        form.addEventListener('submit', (e) => {
          e.preventDefault();
          
          // Show success message
          const button = form.querySelector('button[type="submit"]');
          const originalText = button.textContent;
          button.textContent = t('success') + '!';
          button.classList.add('bg-green-600', 'hover:bg-green-700');
          button.classList.remove('bg-primary-600', 'hover:bg-primary-700');
          
          // Reset after 3 seconds
          setTimeout(() => {
            button.textContent = originalText;
            button.classList.remove('bg-green-600', 'hover:bg-green-700');
            button.classList.add('bg-primary-600', 'hover:bg-primary-700');
            form.reset();
          }, 3000);
        });
      }
    }
  }

  // Make toggleFAQ available globally
  window.toggleFAQ = toggleFAQ;

  document.addEventListener('DOMContentLoaded', () => {
    new ContactPage();
  });
</script>